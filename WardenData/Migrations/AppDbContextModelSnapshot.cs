// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WardenData.Models;

#nullable disable

namespace WardenData.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WardenData.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WardenData.Models.OrderEffect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DesiredValue")
                        .HasColumnType("integer");

                    b.Property<string>("EffectName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MaxValue")
                        .HasColumnType("integer");

                    b.Property<int>("MinValue")
                        .HasColumnType("integer");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderEffects");
                });

            modelBuilder.Entity("WardenData.Models.RuneHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("EffectsAfter")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<bool>("HasSucceed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTenta")
                        .HasColumnType("boolean");

                    b.Property<int>("RuneId")
                        .HasColumnType("integer");

                    b.Property<int>("SessionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.ToTable("RuneHistories");
                });

            modelBuilder.Entity("WardenData.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("InitialEffects")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<string>("RunesPrices")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<long>("Timestamp")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("WardenData.Models.OrderEffect", b =>
                {
                    b.HasOne("WardenData.Models.Order", "Order")
                        .WithMany("OrderEffects")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("WardenData.Models.RuneHistory", b =>
                {
                    b.HasOne("WardenData.Models.Session", "Session")
                        .WithMany("RuneHistories")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");
                });

            modelBuilder.Entity("WardenData.Models.Session", b =>
                {
                    b.HasOne("WardenData.Models.Order", "Order")
                        .WithMany("Sessions")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("WardenData.Models.Order", b =>
                {
                    b.Navigation("OrderEffects");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("WardenData.Models.Session", b =>
                {
                    b.Navigation("RuneHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
